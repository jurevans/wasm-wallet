[package]
name = "wasm-wallet"
version = "0.1.0"
authors = ["Justin Evans <jurevans@gmail.com>"]
description = "A WASM Crypto Wallet built in Rust"
license = "MIT"
edition = "2018"
repository = "https://github.com/jurevans/wasm-wallet/"

[lib]
crate-type = ["cdylib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
serde = { version = "1.0", features = ["derive"] }
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
# wasm-bindgen = "0.2"
# rust-crypto-wasm = { git = "https://github.com/buttercup/rust-crypto-wasm", rev = "2631030" }
# bip32 = "0.2.2"
bitcoin-wallet = { git = "https://github.com/jurevans/rust-wallet/", rev = "99e2fd99d078dfdade3699ba5b4ffadd684f0464" }
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
